
_target_: src.pl_modules.pl_baseline.TSForecastTask

name: LSTM-CNN
optimizer:
  _target_: torch.optim.AdamW
  _partial_: true
  lr: 0.0016
  betas: [0.9, 0.95]
  weight_decay: 0.05
# optimizer:
#   _target_: torch.optim.Adam
#   _partial_: true
#   lr: 0.001
scheduler:
  _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
  _partial_: true
  mode: min
  factor: 0.5
  patience: 10
# scheduler:
#   _target_: torch.optim.lr_scheduler.StepLR
#   _partial_: true
#   step_size: 10
#   gamma: 0.5
model:
  _target_: src.models.lstm_cnn.Model
  input_size: 25
  seq_len: 48
  label_len: 12
  pred_len: 24
  n_layer_lstm: 2
  bidirectional: True
  embed: timeF
  dropout: 0.05
  cnn_out_channel: 8
  kernel_size: 3
  n_layer_cnn: 2
  
metrics:
  train:
    rmse:
      _target_: torchmetrics.regression.MeanSquaredError
      squared: False
    mae: 
      _target_: torchmetrics.regression.MeanSquaredError
    mape:
      _target_: torchmetrics.regression.MeanAbsolutePercentageError
  val:
    rmse:
      _target_: torchmetrics.regression.MeanSquaredError
      squared: False
    mae: 
      _target_: torchmetrics.regression.MeanSquaredError
    mape:
      _target_: torchmetrics.regression.MeanAbsolutePercentageError
criterion:
  _target_: torch.nn.MSELoss
monitor: val/rmse

pred_len: 48
